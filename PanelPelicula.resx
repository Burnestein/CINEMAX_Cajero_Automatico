<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PbxPelicula.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADMAIsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCmSfboO1Jn6flQev4VPbzxwht0ZZzwDkdPoRXYfMEGfp+VG76f
        lVv7VB9qMwtzjHA3Dr69MUG6gMwkFuwIBB+Yc+nGMUBYqZ+n5UZ+n5VbW5twZSbdj5h5+YdPTp9eaIbm
        CJMfZ2LHqdwPP4igLFTP0/Klyfb8qsrPbJKXW3bttBfOPXtzSeZamRma3cg9hJjnPNA7FbP0/Klyfb8q
        uLdW6hkFs3lkdNwz+eKjaS1JXbbuMHJ/eZyPSgCvn6flSZ+n5VaE1skqOlu42nkF85GPpQZrV3kZ7ZyW
        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
</value>
  </data>
</root>